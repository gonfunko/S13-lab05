package edu.ucsb.cs56.S13.drawings.idarvis.advanced;
import java.awt.geom.GeneralPath; // combinations of lines and curves
import java.awt.geom.AffineTransform; // translation, rotation, scale
import java.awt.Shape; // general class for shapes

// all imports below this line needed if you are implementing Shape
import java.awt.geom.Point2D; 
import java.awt.geom.Rectangle2D;
import java.awt.Rectangle;
import java.awt.geom.PathIterator;
import java.awt.geom.AffineTransform;

import edu.ucsb.cs56.S13.drawings.utilities.ShapeTransforms;
import edu.ucsb.cs56.S13.drawings.utilities.GeneralPathWrapper;

/**
   A simple television (wrapper around a General Path, implements Shape)

   This provides an example of how you can start with the coordinates
   of a hard coded object, and end up with an object that can be
   drawn anywhere, with any width or height.
   
      
   @author Daryl Pham 
   @version for CS56, S13, UCSB, 05/21/2013
   
*/

public class Television extends GeneralPathWrapper implements Shape {
	
	/**
     * ConstrucTor for objects of class Television
     */
    
    public void Television(double x, double y, double width, double height) {
		
		GeneralPath leftSide = new GeneralPath();
		
		leftSide.moveTo(x,y);
		leftSide.lineTo(x,y-height);
		
		GeneralPath Top = new GeneralPath();
		
		Top.moveTo(x,y);
		Top.lineTo(x+width,y);
		
		GeneralPath botTom = new GeneralPath();
		
		botTom.moveTo(x,y-height);
		botTom.lineTo(x+width,y-height);
		
		GeneralPath rightSide = new GeneralPath();
		
		rightSide.moveTo(x+width,y);
		rightSide.lineTo(x+width,y-height);
		
		GeneralPath TV = this.get();
        TV.append(Top, false);
        TV.append(leftSide, false);
        TV.append(rightSide, false);
        TV.append(botTom, false);
        
     /*   Shape t = ShapeTransforms.translatedCopyOf(TV, -200 + x, -200 + y);
        
        t =  ShapeTransforms.scaledCopyOf(t, width/100, height/100) ;
        
        this.set(new GeneralPath(t));
        */
       }
   }
        
        
        
        
        
        
